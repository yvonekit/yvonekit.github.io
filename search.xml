<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>mac 禁止adobe creative cloud自启动</title>
    <url>/2021/06/20/cloud%E8%87%AA%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[<h2 id="我们如何在MacOS上禁用自动启动Adobe-Creative-Cloud"><a href="#我们如何在MacOS上禁用自动启动Adobe-Creative-Cloud" class="headerlink" title="我们如何在MacOS上禁用自动启动Adobe Creative Cloud"></a>我们如何在MacOS上禁用自动启动Adobe Creative Cloud</h2><p>我们打开终端应用程序（默认情况下，在所有的macOS / OS X系统上）。</p>
<p>我们执行命令行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*launchctl unload -w /Library/LaunchAgents/com.adobe.AdobeCreativeCloud.plist</span><br></pre></td></tr></table></figure>
<p>执行上述命令行后，Adobe Creative Cloud将不再在操作系统启动时自动启动。</p>
<p>启动Adobe Creative Cloud的命令行的反向是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*launchctl load -w /Library/LaunchAgents/com.adobe.AdobeCreativeCloud.plist</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>next v8.5.0 如何添加 Valine评论</title>
    <url>/2021/06/19/valine/</url>
    <content><![CDATA[<h2 id="next-v8-5-0-移除了-Valine"><a href="#next-v8-5-0-移除了-Valine" class="headerlink" title="next v8.5.0 移除了 Valine"></a>next v8.5.0 移除了 Valine</h2><p>需要继续使用请安装插件：<a href="https://github.com/next-theme/hexo-next-valine">https://github.com/next-theme/hexo-next-valine</a><br>需要注意将 <code>appid</code> 和 <code>appkey</code> 改为 <code>appId</code> 和 <code>appKey</code>） </p>
<p>安装插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install next-theme/hexo-next-valine</span><br></pre></td></tr></table></figure>

<p>将以下代码复制到theme _config.yml 608行 填写<code>appId</code> 和 <code>appKey</code> <code>serverURLs</code> serverurls 不写会报401错</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">  appId:  <span class="comment"># your leancloud application appid</span></span><br><span class="line">  appKey:  <span class="comment"># your leancloud application appkey</span></span><br><span class="line">  serverURLs: <span class="comment"># When the custom domain name is enabled, fill it in here</span></span><br><span class="line">  placeholder: Just go go <span class="comment"># comment box placeholder</span></span><br><span class="line">  avatar: mm <span class="comment"># gravatar style</span></span><br><span class="line">  meta: [nick, mail, link] <span class="comment"># Custom comment header</span></span><br><span class="line">  pageSize: 10 <span class="comment"># pagination size</span></span><br><span class="line">  visitor: <span class="literal">false</span> <span class="comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&#x27; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span></span><br><span class="line">  comment_count: <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  recordIP: <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>next主题高级配置</title>
    <url>/2021/06/20/next%E4%B8%BB%E9%A2%98%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>添加菜单选项<br>默认情况下，菜单导航栏有首页、归档、关于三个选项，除此之外笔者还添加了分类、标签和关于。在主题配置文件 中，找到menu属性，并去掉categories、 tags、about的的注释，如下图所示：</p>
<p>然后在Hexo根目录执行指令如下：</p>
<p>// 添加分类页面<br>hexo new page “categories”<br>// 添加标签页面<br>hexo new page “tags”<br>// 添加关于页面<br>hexo new page “about”<br>执行完上述指令后，在Hexo根目录/source/文件夹下创建三个文件夹，命名分别为：categories、tags、about文件夹，在这些文件夹中分别会创建一个以index命名的Markdown文件，对这三个Markdown文件内容进行修改，使之分别为：</p>
<hr>
<p>title: categories<br>date: 2017-03-12 22:06:24<br>type: “categories”</p>
<hr>
<hr>
<p>title: 标签<br>date: 2017-03-12 17:27:16<br>type: “tags”</p>
<hr>
<hr>
<p>title: about<br>date: 2017-03-12 22:07:26<br>type: “about”</p>
<hr>
<p>完成文件的修改，然后部署Hexo即可完成菜单选项的添加。</p>
<p>添加搜索功能<br>笔者采用的是local search。<br>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>
<p>$ npm install hexo-generator-searchdb –save<br>编辑 站点配置文件 （站点根目录下），新增以下内容到任意位置：</p>
<p>search:<br>  path: search.xml<br>  field: post<br>  format: html<br>  limit: 10000<br>编辑 主题配置文件 （主题目录下），启用本地搜索功能：</p>
<h1 id="Local-search"><a href="#Local-search" class="headerlink" title="Local search"></a>Local search</h1><p>local_search:<br>  enable: true<br>之后部署到远程即可</p>
]]></content>
  </entry>
</search>
